{"version":3,"sources":["redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/index.js","components/Nav/Nav.js","components/Footer/Footer.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/ProtectedRoute/ProtectedRoute.js","components/Main/Main.js","components/Auto/AutoForm.js","components/Auto/Auto.js","components/Home/Home.js","components/Life/Life.js","components/Business/Business.js","components/LogOutButton/LogOutButton.js","components/Admin/Admin.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","arguments","length","undefined","type","registrationMessage","loginMode","userReducer","action","payload","rootReducer","errors","user","loginUser","logoutUser","loginSaga","config","regenerator_default","a","wrap","_context","prev","next","put","headers","Content-Type","withCredentials","axios","post","t0","console","log","response","status","stop","_marked","this","_context2","_marked2","_context3","takeLatest","_marked3","registerUser","registrationSaga","registrationSaga_marked","registrationSaga_marked2","fetchUser","userSaga","get","sent","data","userSaga_marked","userSaga_marked2","rootSaga","all","sagas_marked","Nav","open","handleDrawerOpen","_this","setState","handleDrawerClose","_this$props","props","classes","theme","react_default","createElement","className","root","CssBaseline_default","AppBar_default","position","classNames","appBar","Object","defineProperty","appBarShift","Toolbar_default","disableGutters","IconButton_default","color","aria-label","onClick","menuButton","hide","react_responsive_default","maxWidth","Menu_default","Typography_default","grow","minWidth","Link","link","to","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","direction","ChevronLeft_default","ChevronRight_default","Divider_default","List_default","content","ListItem_default","button","linkDrawer","React","Component","withStyles","display","padding","background","boxShadow","transition","transitions","create","easing","sharp","duration","leavingScreen","width","concat","marginLeft","easeOut","enteringScreen","marginRight","flexGrow","textDecoration","textTransform","letterSpacing","lineHeight","fontWeight","fontStyle","fontSize","&:hover, active","flexShrink","objectSpread","alignItems","mixins","toolbar","justifyContent","withTheme","Footer","LoginPage","username","password","login","event","preventDefault","dispatch","handleInputChangeFor","propertyName","target","value","_this2","role","onSubmit","htmlFor","name","onChange","connect","RegisterPage","ComponentToShow","ComponentToProtect","component","otherProps","objectWithoutProperties","id","Route","assign","Main","media","src","alt","height","index_es","mainTitle","mobileMainTitle","secondaryTitle","Card_default","card","cardTitle","cardMedia","image","title","reduxState","textAlign","margin","top","left","transform","paddingTop","marginTop","marginBottom","AutoForm","labelWidth","year","make","model","style","numYear","finance","miles","addVehicle","handleChange","nextBtn","ReactDOM","findDOMNode","InputLabelRef","offsetWidth","stepLabel","required","variant","formControl","ref","native","input","label","formControlTwo","numYearForm","radio","control","usage","theft","addVehicleBtn","float","&:hover","Auto","tabs","indicatorColor","textColor","icon","DirectionsCar_default","Person_default","elevation","text","textTwo","Auto_AutoForm","paddingRight","paddingLeft","paddingBottom","borderRadius","borderBottom","components_LogOutButton_LogOutButton","App","HashRouter","components_Nav_Nav","Switch","Redirect","exact","from","path","Home","Life","Business","components_ProtectedRoute_ProtectedRoute","Admin","render","components_Footer_Footer","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","apply","run","react_redux_es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b75e8b82.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n  ]);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport { Link } from 'react-router-dom';\nimport MediaQuery from 'react-responsive';\n\nconst drawerWidth = 280;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    padding: '.1% 0',\n    background: 'transparent',\n    boxShadow: 'none',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n    color: '#1abc9c',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  link: {\n    color: '#1abc9c',\n    textDecoration: 'none',\n    textTransform: 'uppercase',\n    letterSpacing: '1.53px',\n    lineHeight: '1em',\n    fontWeight: '500',\n    fontStyle: 'normal',\n    fontSize: '14px',\n    marginRight: '2%',\n    \"&:hover, active\": {\n      color: '#82e0aa'\n    },\n  },\n  linkDrawer: {\n    color: '#1abc9c',\n    textDecoration: 'none',\n    textTransform: 'uppercase',\n    letterSpacing: '1.53px',\n    lineHeight: '3em',\n    fontWeight: '500',\n    fontStyle: 'normal',\n    fontSize: '14px',\n    \"&:hover, active\": {\n      color: '#82e0aa'\n    },\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n});\n\nclass Nav extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n    const { open } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"static\"\n          className={classNames(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n        \n          <Toolbar disableGutters={!open}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(classes.menuButton, open && classes.hide)}\n            >\n              <MediaQuery maxWidth={768}>\n                <MenuIcon />\n              </MediaQuery>\n            </IconButton>\n\n            {/* <MediaQuery className={classes.logo} minWidth={768}>\n              <Link to=\"/macro\">\n                <img src=\"/\" alt=\"logo\" height=\"100\" width=\"100\" />\n              </Link>\n            </MediaQuery> */}\n            \n            <Typography className={classes.grow}/>\n\n            <MediaQuery minWidth={768}>\n              <Link className={classes.link} to=\"/auto\">Auto</Link>\n              <Link className={classes.link} to=\"/home\">Home</Link>\n              <Link className={classes.link} to=\"/life\">Life</Link>\n              <Link className={classes.link} to=\"/business\">Business</Link>\n            </MediaQuery>\n          </Toolbar>\n        </AppBar>\n        \n        <Drawer\n          className={classes.drawer}\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={this.handleDrawerClose}>\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </div>\n          \n          <Divider />\n          <List className={classes.content}>\n              <ListItem button>\n                <Link className={classes.linkDrawer} to=\"/auto\">+ Auto</Link>\n              </ListItem>\n              <ListItem button>\n                <Link className={classes.linkDrawer} to=\"/home\">+ Home</Link>\n              </ListItem>\n              <ListItem button>\n                <Link className={classes.linkDrawer} to=\"/life\">+ Life</Link>\n              </ListItem>\n              <ListItem button>\n                <Link className={classes.linkDrawer} to=\"/business\">+ Business</Link>\n              </ListItem>\n          </List>\n          <Divider />\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nNav.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Nav);","import React from 'react';\nimport './Footer.css'\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst Footer = () => (\n  <footer>\n    &copy; 2019 Prime Quote\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass LoginPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.errors.loginMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.loginMessage}\n          </h2>\n        )}\n        <form onSubmit={this.login}>\n          <h1>Login</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"log-in\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Log In\"\n            />\n          </div>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_REGISTER_MODE'})}}\n          >\n            Register\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(LoginPage);\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({type: 'REGISTRATION_INPUT_ERROR'});\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.errors.registrationMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.registrationMessage}\n          </h2>\n        )}\n        <form onSubmit={this.registerUser}>\n          <h1>Register User</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"register\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Register\"\n            />\n          </div>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_LOGIN_MODE'})}}\n          >\n            Login\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(RegisterPage);\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport propTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport { CardMedia, Typography } from '@material-ui/core';\nimport MediaQuery from 'react-responsive';\n\nconst styles = theme => ({\n  root: {\n    textAlign: 'center'\n  },\n  card: {\n    height: 120,\n    maxWidth: 200,\n    margin: '1%',\n    display: 'inline-block',\n    width: '100%',\n    textAlign: 'center',\n  },\n  cardMedia: {\n    height: 50,\n    width: 50,\n    top: '40%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    position: 'relative'\n  },\n  cardTitle: {\n    color: 'grey',\n    paddingTop: '5%'\n  },\n  mainTitle: {\n    fontSize: 50,\n    fontWeight: '700',\n    position: 'absolute',\n    top: '25%',\n    left: '20%',\n    transform: 'translate(-50%, -50%)',\n    color: 'white',\n  },\n  mobileMainTitle: {\n    fontSize: 25,\n    position: 'absolute',\n    top: '15%',\n    left: '20%',\n    transform: 'translate(-50%, -50%)',\n    color: 'white',\n  },\n  secondaryTitle: {\n    fontSize: 35,\n    marginTop: '1vh',\n    marginBottom: '1vh',\n  },\n});\n\nclass Main extends Component {\n  render() {\n    const { classes } = this.props;\n      return (\n        <div className={classes.root}>\n\n          <MediaQuery minWidth={760}>\n            <div className={classes.media}>\n              <img src=\"/images/main.png\" alt=\"main\" width=\"100%\" height=\"auto\"/>\n              <Typography className={classes.mainTitle}>Insurance</Typography>\n            </div>\n          </MediaQuery>\n\n          <MediaQuery maxWidth={761}>\n            <div className={classes.media}>\n              <img src=\"/images/main.png\" alt=\"main\" width=\"100%\" height=\"auto\"/>\n              <Typography className={classes.mobileMainTitle}>Insurance</Typography>\n            </div>\n          </MediaQuery>\n\n          <div>\n            <Typography className={classes.secondaryTitle}>Let Us Compare Your Quote</Typography>\n          </div>\n\n          <div>\n            <Card className={classes.card}>\n              <Typography className={classes.cardTitle}>Auto</Typography>\n              <CardMedia\n                className={classes.cardMedia}\n                image=\"/images/auto.png\"\n                title=\"auto\"\n              >\n              </CardMedia>\n            </Card>\n\n            <Card className={classes.card}>\n              <Typography className={classes.cardTitle}>Home</Typography>\n              <CardMedia\n                className={classes.cardMedia}\n                image=\"/images/home.png\"\n                title=\"auto\"\n              >\n              </CardMedia>\n            </Card>\n\n            <Card className={classes.card}>\n              <Typography className={classes.cardTitle}>Life</Typography>\n              <CardMedia\n                className={classes.cardMedia}\n                image=\"/images/life.png\"\n                title=\"auto\"\n              >\n              </CardMedia>\n            </Card>\n\n            <Card className={classes.card}>\n              <Typography className={classes.cardTitle}>Business</Typography>\n              <CardMedia\n                className={classes.cardMedia}\n                image=\"/images/business.png\"\n                title=\"auto\"\n              >\n              </CardMedia>\n            </Card>\n          </div>\n        </div>\n      );\n  }\n}\n\nconst mapStateToProps = reduxState => ({\n  reduxState,\n});\n\nMain.propTypes = {\n  classes: propTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Main));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport propTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport ReactDOM from 'react-dom';\n\nimport {\n    Button,\n    OutlinedInput,\n    InputLabel,\n    FormControl,\n    Select,\n    TextField, \n    StepLabel,\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n} from '@material-ui/core';\n\nconst styles = theme => ({\n    formControl: {\n        width: '48%',\n    },\n    formControlTwo: {\n        width: '48%',\n        float: 'right',\n    },\n    miles: {\n        width: '100%'\n    },\n    numYearForm: {\n        width: '100%',\n    },\n    stepLabel: {\n        marginTop: 25,\n        color: 'black',\n    },\n    radio: {\n        display: 'inline'\n    },\n    nextBtn: {\n        marginTop: 25,\n        width: '100%',\n        height: 50,\n        background: '#6200ee',\n            '&:hover': {\n                background: '#3700b3',\n            },\n        color: 'white'\n    },\n    addVehicleBtn: {\n        marginTop: 30,\n        width: '100%',\n        height: 50,\n    },\n});\n\nclass AutoForm extends Component {\n\n    state = {\n        labelWidth: 0,\n        year: '',\n        make: '',\n        model: '',\n        style: '',\n        numYear: '',\n        finance: '',\n        miles: '',\n      };\n\n      addVehicle = () => {\n          console.log('add vehicle btn works!');\n      };\n\n      componentDidMount() {\n        this.setState({\n          labelWidth: ReactDOM.findDOMNode(this.InputLabelRef).offsetWidth,\n        });\n      };\n    \n      handleChange = name => event => {\n        this.setState({ [name]: event.target.value });\n      };\n\n      nextBtn = () => {\n        console.log('next btn works!');\n      };\n\n  render() {\n    const { classes } = this.props;\n      return (\n        <div>\n\n            <StepLabel className={classes.stepLabel}>What vehicle would you like to insure?</StepLabel>\n            <FormControl \n                required\n                variant=\"outlined\" \n                margin=\"normal\" \n                className={classes.formControl}\n            >\n                <InputLabel\n                    ref={ref => {\n                    this.InputLabelRef = ref;\n                    }}\n                    htmlFor=\"outlined-year-native-simple\"\n                >\n                    Year\n                </InputLabel>\n                <Select\n                    native\n                    value={this.state.year}\n                    onChange={this.handleChange('year')}\n                    input={\n                    <OutlinedInput\n                        name=\"year\"\n                        labelWidth={this.state.labelWidth}\n                        id=\"outlined-year-native-simple\"\n                    />\n                    }\n                >\n                    <option value=\"\" />\n                    <option value={2019}>2019</option>\n                    <option value={2018}>2018</option>\n                    <option value={2017}>2017</option>\n                    <option value={2016}>2016</option>\n                    <option value={2015}>2015</option>\n                    <option value={2014}>2014</option>\n                    <option value={2013}>2013</option>\n                    <option value={2012}>2012</option>\n                    <option value={2011}>2011</option>\n                    <option value={2010}>2010</option>\n                    <option value={2009}>2009</option>\n                    <option value={2008}>2008</option>\n                    <option value={2007}>2007</option>\n                    <option value={2006}>2006</option>\n                    <option value={2005}>2005</option>\n                    <option value={2004}>2004</option>\n                    <option value={2003}>2003</option>\n                    <option value={2002}>2002</option>\n                    <option value={2001}>2001</option>\n                    <option value={2000}>2000</option>\n                </Select>\n            </FormControl>\n\n            <TextField\n                required\n                id=\"outlined-required\"\n                label=\"Make\"\n                className={classes.formControlTwo}\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={this.state.make}\n                onChange={this.handleChange('make')}\n            />\n            \n            <TextField\n                required\n                id=\"outlined-required\"\n                label=\"Model\"\n                className={classes.formControl}\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={this.state.model}\n                onChange={this.handleChange('model')}\n            />\n\n            <TextField\n                required\n                id=\"outlined-required\"\n                label=\"Style\"\n                className={classes.formControlTwo}\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={this.state.style}\n                onChange={this.handleChange('style')}\n            />\n\n            <StepLabel className={classes.stepLabel}>How many years have you had this vehicle?</StepLabel>\n            <FormControl\n                required\n                variant=\"outlined\" \n                margin=\"normal\" \n                className={classes.numYearForm}\n            >\n                <InputLabel\n                    ref={ref => {\n                        this.InputLabelRef = ref;\n                        }}\n                        htmlFor=\"outlined-numYear-native-simple\"\n                >\n                    Please select number of years\n                </InputLabel>\n                <Select\n                    native\n                    value={this.state.numYear}\n                    onChange={this.handleChange('numYear')}\n                    input={\n                    <OutlinedInput\n                        name=\"numYear\"\n                        labelWidth={this.state.labelWidth}\n                        id=\"outlined-numYear-native-simple\"\n                    />\n                    }\n                >\n                    <option value=\"\" />\n                    <option value={0-1}>Less than 1 year</option>\n                    <option value={1}>1 years</option>\n                    <option value={2}>2 years</option>\n                    <option value={3}>3 years</option>\n                    <option value={4}>4 years</option>\n                    <option value={5}>5 years</option>\n                    <option value={6}>6 years</option>\n                    <option value={7}>7 years</option>\n                    <option value={8}>8 years</option>\n                    <option value={9}>9 years</option>\n                    <option value={10}>10+ years</option>\n                </Select>\n            </FormControl>\n                \n            <StepLabel className={classes.stepLabel}>Do you own, lease, or finance this vehicle?</StepLabel>\n            <RadioGroup\n                required\n                name=\"finance\"\n                className={classes.radio}\n                value={this.state.finance}\n                onChange={this.handleChange('finance')}\n            >\n                <FormControlLabel value=\"Own\" control={<Radio />} label=\"Own\" />\n                <FormControlLabel value=\"Lease\" control={<Radio />} label=\"Lease\" />\n                <FormControlLabel value=\"Finance\" control={<Radio />} label=\"Finance\" />\n            </RadioGroup>\n\n            <StepLabel className={classes.stepLabel}>What is the main purpose of this vehicle?</StepLabel>\n            <RadioGroup\n                required\n                name=\"usage\"\n                className={classes.radio}\n                value={this.state.usage}\n                onChange={this.handleChange('usage')}\n            >\n                <FormControlLabel value=\"Commute\" control={<Radio />} label=\"Commute\" />\n                <FormControlLabel value=\"Pleasure\" control={<Radio />} label=\"Pleasure\" />\n                <FormControlLabel value=\"Business\" control={<Radio />} label=\"Business\" />\n            </RadioGroup>\n\n            <StepLabel className={classes.stepLabel}>How many miles do you drive this vehicle annually?</StepLabel>\n            <FormControl \n                required\n                variant=\"outlined\" \n                margin=\"normal\" \n                className={classes.miles}\n            >\n                <InputLabel\n                    ref={ref => {\n                        this.InputLabelRef = ref;\n                        }}\n                        htmlFor=\"outlined-miles-native-simple\"\n                >\n                    Please select number of miles\n                </InputLabel>\n                <Select\n                    native\n                    value={this.state.miles}\n                    onChange={this.handleChange('miles')}\n                    input={\n                    <OutlinedInput\n                        name=\"miles\"\n                        labelWidth={this.state.labelWidth}\n                        id=\"outlined-miles-native-simple\"\n                    />\n                    }\n                >\n                    <option value=\"\" />\n                    <option value={0-4999}>0-4999 miles</option>\n                    <option value={5000-9999}>5000-9999 miles</option>\n                    <option value={10000-14999}>10,000-14,999 miles</option>\n                    <option value={15000-19999}>15,000-19,999 miles</option>\n                    <option value={20000-24999}>20,000-24,999 miles</option>\n                    <option value={25000-29999}>25,000-29,999 miles</option>\n                    <option value={30000}>30,000+ miles</option>\n                </Select>\n            </FormControl>\n\n            <StepLabel className={classes.stepLabel}>Does this vehicle have an anti-theft locking device?</StepLabel>\n            <RadioGroup\n                required\n                name=\"theft\"\n                className={classes.radio}\n                value={this.state.theft}\n                onChange={this.handleChange('theft')}\n            >\n                <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\n                <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n            </RadioGroup>\n\n            <StepLabel className={classes.stepLabel}>Do you keep this vehicle at your home address?</StepLabel>\n            <RadioGroup\n                required\n                name=\"theft\"\n                className={classes.radio}\n                value={this.state.theft}\n                onChange={this.handleChange('theft')}\n            >\n                <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\n                <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\n            </RadioGroup>\n            \n            <StepLabel></StepLabel>\n\n            <Button \n                className={classes.addVehicleBtn} \n                variant=\"outlined\" \n                color=\"primary\"\n                onClick={this.addVehicle}\n            >\n                + Add another vehicle\n            </Button>\n\n            <Button \n                className={classes.nextBtn} \n                variant=\"outlined\" \n                color=\"primary\"\n                onClick={this.nextBtn}\n            >\n                Next\n            </Button>\n\n        </div>\n      );\n  }\n}\n\nconst mapStateToProps = reduxState => ({\n  reduxState,\n});\n\nAutoForm.propTypes = {\n  classes: propTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(AutoForm));\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport propTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport { \n  Paper, \n  Typography,\n  Tab,\n  Tabs,\n} from '@material-ui/core';\nimport AutoForm from './AutoForm';\nimport Person from '@material-ui/icons/Person';\nimport DirectionsCar from '@material-ui/icons/DirectionsCar';\n\nconst styles = theme => ({\n  paper: {\n    paddingRight: 80,\n    paddingLeft: 80,\n    paddingBottom: 40,\n    paddingTop: 40,\n    width: 700,\n    margin: 'auto',\n    marginBottom: '5vh',\n    borderRadius: '0px 0px 4px 4px',\n    boxShadow: 'none',\n  },\n  tabs: {\n    width: 700,\n    margin: 'auto',\n    borderRadius: '4px 4px 0px 0px',\n    borderBottom: '1px solid grey',\n    boxShadow: 'none',\n  },\n  text: {\n    marginBottom: 10,\n    fontWeight: 900,\n  },\n  textTwo: {\n    textAlign: 'justify',\n  },\n});\n\nclass Auto extends Component {\n\n  state = {\n    value: 0,\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    const { classes } = this.props;\n      return (\n        <div>\n          <Paper className={classes.tabs}>\n            <Tabs\n                value={this.state.value}\n                onChange={this.handleChange}\n                variant=\"fullWidth\"\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n              >\n              <Tab icon={<DirectionsCar />} label=\"VEHICLE\" />\n              <Tab icon={<Person />} label=\"DRIVER\" />\n            </Tabs>\n          </Paper>\n\n          <Paper className={classes.paper} elevation={1}>\n            <Typography className={classes.text} variant=\"h5\" component=\"h3\">\n              Tell us a little more about your vehicle.\n            </Typography>\n            <Typography className={classes.textTwo} component=\"p\">\n              Let us know your info. The more accurate it is, the more accurate your quote will be. We'll send your information over to the most appropriate agent.\n            </Typography>\n            <br></br>\n            <AutoForm/>\n          </Paper>\n        </div>\n      );\n  }\n}\n\nconst mapStateToProps = reduxState => ({\n  reduxState,\n});\n\nAuto.propTypes = {\n  classes: propTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Auto));\n\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Home = (props) => (\n  <div>\n\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Life = (props) => (\n  <div>\n\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(Life);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Business = (props) => (\n  <div>\n\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(Business);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst LogOutButton = props => (\n  <button\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n  >\n    Log Out\n  </button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\n\n// this could also be written with destructuring parameters as:\n// const UserPage = ({ user }) => (\n// and then instead of `props.user.username` you could use `user.username`\nconst Admin = (props) => (\n  <div>\n    <h1 id=\"welcome\">\n      Welcome, { props.user.username }!\n    </h1>\n    <p>Your ID is: {props.user.id}</p>\n    <LogOutButton className=\"log-in\" />\n  </div>\n);\n\n// Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(Admin);\n","import React, {Component} from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport {connect} from 'react-redux';\n\nimport Nav from '../Nav/Nav';\nimport Footer from '../Footer/Footer';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute'\n\nimport Main from '../Main/Main';\nimport Auto from '../Auto/Auto';\nimport Home from '../Home/Home';\nimport Life from '../Life/Life';\nimport Business from '../Business/Business';\nimport Admin from '../Admin/Admin';\n\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.dispatch({type: 'FETCH_USER'})\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            <Redirect exact from=\"/\" to=\"/main\" />\n            <Route\n              exact\n              path=\"/main\"\n              component={Main}\n            />\n            <Route\n              exact\n              path=\"/auto\"\n              component={Auto}\n            />\n            <Route\n              exact\n              path=\"/home\"\n              component={Home}\n            />\n            <Route\n              exact\n              path=\"/life\"\n              component={Life}\n            />\n            <Route\n              exact\n              path=\"/business\"\n              component={Business}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/admin\"\n              component={Admin}\n            />\n            <Route render={() => <h1>404</h1>} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n  )}\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}